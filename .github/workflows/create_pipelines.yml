name: Create cluster with OpenShift Pipelines

on:
  workflow_dispatch:
    inputs:
      dry_run:
        type: string
        description: Dry run safety flag to disable writes
        required: false
        default: 'true'
jobs:
  aws_auth:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.OCP_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.OCP_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.OCP_AWS_REGION}}

      - name: Check AWS Credentials
        run: aws sts get-caller-identity

  create_cluster:
    needs: aws_auth
    uses: CaravanaCloud/RedHatNotebooks/.github/workflows/create_ocp_aws_ipi.yml@main
    with:
      dry_run: ${{ github.event.inputs.dry_run }}
    secrets:
      PULL_SECRET: ${{ secrets.PULL_SECRET }}
      OCP_BASE_DOMAIN: ${{ secrets.OCP_BASE_DOMAIN }}
      OCP_SSH_KEY: ${{ secrets.OCP_SSH_KEY }}
      OCP_AWS_REGION: ${{ secrets.OCP_AWS_REGION }}
      OCP_AWS_ACCESS_KEY_ID: ${{ secrets.OCP_AWS_ACCESS_KEY_ID }}
      OCP_AWS_SECRET_ACCESS_KEY: ${{ secrets.OCP_AWS_SECRET_ACCESS_KEY }}
      FILE_KEY: ${{ secrets.FILE_KEY }}

  install_pipelines:
    needs: create_cluster
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.10.8"
          tkn: "0.21.0"

      - name: Download install dir
#        if: ${{ github.event.inputs.dry_run == 'false' }}
        uses: actions/download-artifact@v3
        with:
          name: install-dir.tar.gz.enc

      - name: Decrypt install dir
#        if: ${{  github.event.inputs.dry_run == 'false' }}
        run: openssl enc -aes-256-cbc -d -a -pbkdf2 -k ${{ secrets.FILE_KEY }} -in  "/home/runner/work/RedHatNotebooks/RedHatNotebooks/install-dir.tar.gz.enc" -out "install-dir.tar.gz"
        env:
          INPUT_FILE: /home/runner/work/RedHatNotebooks/RedHatNotebooks/install-dir.tar.gz.enc

      - name: Extract install dir
#        if: ${{  github.event.inputs.dry_run == 'false' }}
        run: |
          mkdir -p ./install-dir
          tar zxvf install-dir.tar.gz -C ./install-dir
          find .

      - name: Print the versions
        continue-on-error: true
        run: oc version

      - name: Check if kubeconfig auth is present
        continue-on-error: true
        run: find .

      - name: debug
        run: |
          echo "github.event.inputs.dry_run=${{github.event.inputs.dry_run}}"
          echo "inputs.dry_run=${{inputs.dry_run}}"
          echo "KUBECONFIG=$KUBECONFIG"
          find .

      - name: Subscribe to pipelines
        run: oc apply -f pipelines/sub.yml
