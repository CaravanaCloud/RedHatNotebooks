name: Provision cluster using OCP IPI

on: [workflow_call,workflow_dispatch]

env:
  OCP_INSTALL_DIR: /tmp/install-dir
  OCP_INSTALL_CONFIG: /tmp/install-dir/install-config.yaml
  OCP_INSTALL_TEMPLATE: ./provisioning/install_config.tpl.yaml

jobs:
  all-steps:
    runs-on: ubuntu-latest
    
    outputs:
      cluster_name: ${{ steps.generate-cluster-name.outputs.value }}

    steps:
      - id: generate-cluster-name
        run: echo "::set-output name=value::rhnb-$RANDOM"

      - name: Debug Variables
        run: echo "CLUSTER_NAME=$CLUSTER_NAME"
        env:
          CLUSTER_NAME: ${{ steps.generate-cluster-name.outputs.value }}
      
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Generate install config
        run: env
        env:
          INSTALL_DIR: "/tmp/install-dir"
          INSTALL_CONFIG: "/tmp/install-dir/install-config.yaml"
      
      - name: Download OpenShift Installer
        env:
          INSTALL_URL: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest/openshift-install-linux.tar.gz
          INSTALL_DIR: /tmp/openshift-installer
          INSTALL_FILE: /tmp/openshift-installer/openshift-install-linux.tar.gz
          INSTALL_TARGET: /tmp/openshift-installer/openshift-install
          INSTALL_PATH: /usr/local/bin/
        run: |
          mkdir -p "$INSTALL_DIR"
          wget -nv -O "$INSTALL_FILE" "$INSTALL_URL"
          tar zxvf "$INSTALL_FILE" -C "$INSTALL_DIR"
          sudo mv  "$INSTALL_TARGET" "$INSTALL_PATH" 
          rm "$INSTALL_FILE"

      - name: Check Openshift Installer
        run: openshift-install version

      - name: Create Install Dir
        run: mkdir -p "$OCP_INSTALL_DIR"
      
      - name: Generate Install Config
        run: envsubst < "$OCP_INSTALL_TEMPLATE" > "$OCP_INSTALL_CONFIG"
      
      - name: Cat Install Config
        run: cat "$OCP_INSTALL_CONFIG"
