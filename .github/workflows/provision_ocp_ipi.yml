# git commit --allow-empty -am "Updated ocp ipi workflow $(date)" && git push && gh workflow run provision_ocp_ipi.yml
name: Provision cluster using OCP IPI

on: [workflow_call,workflow_dispatch]

env:
  OCP_INSTALL_DIR: /tmp/install-dir
  OCP_INSTALL_CONFIG: /tmp/install-dir/install-config.yaml
  OCP_INSTALL_TEMPLATE: ./provisioning/install_config.tpl.yaml
  PULL_SECRET: ${{ secrets.PULL_SECRET }}
  OCP_BASE_DOMAIN: ${{ secrets.OCP_BASE_DOMAIN }}
  OCP_SSH_KEY: ${{ secrets.OCP_SSH_KEY }}
  OCP_AWS_REGION: eu-west-1
  OCP_ARCH: amd64
  OCP_WORKER_REPLICAS: 3
  OCP_WORKER_TYPE: m5.2xlarge
  OCP_CONTROL_TYPE: m5.2xlarge
  OCP_CONTROL_REPLICAS: 3

jobs:
  all-steps:
    runs-on: ubuntu-latest
    
    outputs:
      cluster_name: ${{ steps.generate-cluster-name.outputs.value }}

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.OCP_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.OCP_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.OCP_AWS_REGION}}

      - name: Check AWS Credentials
        run: aws sts get-caller-identity

      - id: generate-cluster-name
        run: echo "::set-output name=value::rhnb-$RANDOM"

      - name: Debug Variables
        run: echo "CLUSTER_NAME=$CLUSTER_NAME"
        env:
          CLUSTER_NAME: ${{ steps.generate-cluster-name.outputs.value }}
      
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Cache openshift-install
        uses: actions/cache@v2
        env:
          cache-name: cache-openshift-install
        with:
          path: /usr/local/bin/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('openshift-install') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Download OpenShift Installer
        env:
          INSTALL_URL: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest/openshift-install-linux.tar.gz
          INSTALL_DIR: /tmp/openshift-installer
          INSTALL_FILE: /tmp/openshift-installer/openshift-install-linux.tar.gz
          INSTALL_TARGET: /tmp/openshift-installer/openshift-install
          INSTALL_PATH: /usr/local/bin/
        run: |
          mkdir -p "$INSTALL_DIR"
          wget -nv -O "$INSTALL_FILE" "$INSTALL_URL"
          tar zxvf "$INSTALL_FILE" -C "$INSTALL_DIR"
          sudo mv  "$INSTALL_TARGET" "$INSTALL_PATH" 
          rm "$INSTALL_FILE"

      - name: Check Openshift Installer
        run: openshift-install version

      - name: Create Install Dir
        run: mkdir -p "$OCP_INSTALL_DIR"
      
      - name: Generate Install Config
        run: envsubst < "$OCP_INSTALL_TEMPLATE" > "$OCP_INSTALL_CONFIG"
        env:
          OCP_NAME: ${{ steps.generate-cluster-name.outputs.value }}

      - name: Cat Install Config
        run: cat "$OCP_INSTALL_CONFIG"

      - name: Store install config
        uses: actions/upload-artifact@v3
        with:
          name: install-config.yaml
          path: ${{ env.OCP_INSTALL_CONFIG }}
      
      - name: Create cluster
        env:
          LOG_LEVEL: info
        run: openshift-install create cluster --dir "$OCP_INSTALL_DIR" --log-level=$LOG_LEVEL

      - name: Debug stuff
        run: |
          find "$OCP_INSTALL_DIR"
          find . 

        